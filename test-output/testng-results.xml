<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="87" passed="83" failed="4" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2023-07-26T21:50:12 EDT" name="Default suite" finished-at="2023-07-26T21:51:13 EDT" duration-ms="61062">
    <groups>
      <group name="cucumber">
        <method signature="AbstractTestNGCucumberTests.runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:testrunner.testRunner$TestRunner@6e171cd7]" name="runScenario" class="io.cucumber.testng.AbstractTestNGCucumberTests"/>
      </group> <!-- cucumber -->
    </groups>
    <test started-at="2023-07-26T21:50:12 EDT" name="Default test" finished-at="2023-07-26T21:51:13 EDT" duration-ms="61062">
      <class name="testrunner.testRunner$TestRunner">
        <test-method is-config="true" signature="setUpClass(org.testng.ITestContext)[pri:0, instance:testrunner.testRunner$TestRunner@6e171cd7]" started-at="2023-07-26T21:50:12 EDT" name="setUpClass" finished-at="2023-07-26T21:50:14 EDT" duration-ms="1233" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@4557723a]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpClass -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:testrunner.testRunner$TestRunner@6e171cd7]" started-at="2023-07-26T21:50:14 EDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-07-26T21:50:22 EDT" duration-ms="8212" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["check if user able to create a program with valid endpoint and request body"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["post request of all modules"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:testrunner.testRunner$TestRunner@6e171cd7]" started-at="2023-07-26T21:50:22 EDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-07-26T21:50:23 EDT" duration-ms="1517" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["check if user able to create a program with valid endpoint and request body"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["post request of all modules"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:testrunner.testRunner$TestRunner@6e171cd7]" started-at="2023-07-26T21:50:23 EDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-07-26T21:50:25 EDT" duration-ms="1628" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["check if user able to create a batch with valid endpoint and request body"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["post request of all modules"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:testrunner.testRunner$TestRunner@6e171cd7]" started-at="2023-07-26T21:50:25 EDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-07-26T21:50:29 EDT" duration-ms="3801" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["check if user able to create a new user with valid endpoint and request body"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["post request of all modules"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:testrunner.testRunner$TestRunner@6e171cd7]" started-at="2023-07-26T21:50:29 EDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-07-26T21:50:30 EDT" duration-ms="1117" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["check if user able to add a record with valid endpoint and request body"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["post request of all modules"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:testrunner.testRunner$TestRunner@6e171cd7]" started-at="2023-07-26T21:50:30 EDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-07-26T21:50:30 EDT" duration-ms="407" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["check if user able to submit an assignment with valid endpoint and request body"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["post request of all modules"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:testrunner.testRunner$TestRunner@6e171cd7]" started-at="2023-07-26T21:50:30 EDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-07-26T21:50:31 EDT" duration-ms="344" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["check if user able to create a program with existing program name"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["All Post Negative Scenarios"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:testrunner.testRunner$TestRunner@6e171cd7]" started-at="2023-07-26T21:50:31 EDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-07-26T21:50:31 EDT" duration-ms="322" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["check if user able to create a program with missing field"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["All Post Negative Scenarios"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:testrunner.testRunner$TestRunner@6e171cd7]" started-at="2023-07-26T21:50:31 EDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-07-26T21:50:31 EDT" duration-ms="323" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["check if user able to create a batch with existing batch name"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["All Post Negative Scenarios"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:testrunner.testRunner$TestRunner@6e171cd7]" started-at="2023-07-26T21:50:31 EDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-07-26T21:50:32 EDT" duration-ms="299" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["check if user able to create a batch with missing field"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["All Post Negative Scenarios"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:testrunner.testRunner$TestRunner@6e171cd7]" started-at="2023-07-26T21:50:32 EDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-07-26T21:50:32 EDT" duration-ms="324" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["check if user able to create a user with existing phone number"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["All Post Negative Scenarios"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:testrunner.testRunner$TestRunner@6e171cd7]" started-at="2023-07-26T21:50:32 EDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-07-26T21:50:32 EDT" duration-ms="312" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["check if user able to create a program with missing field"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["All Post Negative Scenarios"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:testrunner.testRunner$TestRunner@6e171cd7]" started-at="2023-07-26T21:50:32 EDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-07-26T21:50:33 EDT" duration-ms="296" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["check if user able to create a assignment with existing value"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["All Post Negative Scenarios"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:testrunner.testRunner$TestRunner@6e171cd7]" started-at="2023-07-26T21:50:33 EDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-07-26T21:50:33 EDT" duration-ms="263" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["check if user able to create a assignment with missing field"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["All Post Negative Scenarios"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:testrunner.testRunner$TestRunner@6e171cd7]" started-at="2023-07-26T21:50:33 EDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-07-26T21:50:33 EDT" duration-ms="307" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["check if user able to submit Assignment with existing value"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["All Post Negative Scenarios"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:testrunner.testRunner$TestRunner@6e171cd7]" started-at="2023-07-26T21:50:33 EDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-07-26T21:50:33 EDT" duration-ms="263" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["check if user able to create a assignment with missing field"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["All Post Negative Scenarios"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:testrunner.testRunner$TestRunner@6e171cd7]" started-at="2023-07-26T21:50:33 EDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-07-26T21:50:34 EDT" duration-ms="844" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Check if user able to retrieve a all programs"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Positive Scenarios of All modules Get requests"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:testrunner.testRunner$TestRunner@6e171cd7]" started-at="2023-07-26T21:50:34 EDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-07-26T21:50:35 EDT" duration-ms="312" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Check if user able to retrieve a program by ID"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Positive Scenarios of All modules Get requests"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:testrunner.testRunner$TestRunner@6e171cd7]" started-at="2023-07-26T21:50:35 EDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-07-26T21:50:36 EDT" duration-ms="981" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Check if user able to retrieve a all batches"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Positive Scenarios of All modules Get requests"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:testrunner.testRunner$TestRunner@6e171cd7]" started-at="2023-07-26T21:50:36 EDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-07-26T21:50:36 EDT" duration-ms="259" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Check if user able to retrieve a batch by ID"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Positive Scenarios of All modules Get requests"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:testrunner.testRunner$TestRunner@6e171cd7]" started-at="2023-07-26T21:50:36 EDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-07-26T21:50:36 EDT" duration-ms="277" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Check if user able to retrieve a batch by name"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Positive Scenarios of All modules Get requests"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:testrunner.testRunner$TestRunner@6e171cd7]" started-at="2023-07-26T21:50:36 EDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-07-26T21:50:36 EDT" duration-ms="270" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Check if user able to retrieve a batch by program ID"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Positive Scenarios of All modules Get requests"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:testrunner.testRunner$TestRunner@6e171cd7]" started-at="2023-07-26T21:50:36 EDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-07-26T21:50:37 EDT" duration-ms="229" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Check if user able to retrieve a user with valid User ID"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Positive Scenarios of All modules Get requests"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:testrunner.testRunner$TestRunner@6e171cd7]" started-at="2023-07-26T21:50:37 EDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-07-26T21:50:40 EDT" duration-ms="3358" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Check if user able to retrieve a user roles LMS API"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Positive Scenarios of All modules Get requests"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:testrunner.testRunner$TestRunner@6e171cd7]" started-at="2023-07-26T21:50:40 EDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-07-26T21:50:40 EDT" duration-ms="404" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA["Check if user able to retrieve all staff with valid LMS API"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Positive Scenarios of All modules Get requests"]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[1 expectation failed.
Expected status code <200> but was <404>.
]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 1 expectation failed.
Expected status code <200> but was <404>.

at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:67)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:484)
at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:73)
at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrapNoCoerce.callConstructor(ConstructorSite.java:108)
at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallConstructor(CallSiteArray.java:57)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:263)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:277)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:512)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:696)
at io.restassured.internal.ResponseSpecificationImpl.this$2$validateResponseIfRequired(ResponseSpecificationImpl.groovy)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at org.codehaus.groovy.runtime.callsite.PlainObjectMetaMethodSite.doInvoke(PlainObjectMetaMethodSite.java:43)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:198)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:62)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:185)
at io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:135)
at io.restassured.specification.ResponseSpecification$statusCode$0.callCurrent(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:143)
at io.restassured.internal.ValidatableResponseOptionsImpl.statusCode(ValidatableResponseOptionsImpl.java:89)
at stepdefinition.AllGet_PositiveSteps.user_receives_status_code200_ok_with_message(AllGet_PositiveSteps.java:76)
at ✽.User receives  status code200 ok with message(file:///Users/srihari/GitHub/Team11_RestAPI/src/test/java/features/03AllGetRequest_Positve.feature:62)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:testrunner.testRunner$TestRunner@6e171cd7]" started-at="2023-07-26T21:50:40 EDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-07-26T21:50:41 EDT" duration-ms="745" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Check if user able to retrieve a record with LMS API"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Positive Scenarios of All modules Get requests"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:testrunner.testRunner$TestRunner@6e171cd7]" started-at="2023-07-26T21:50:41 EDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-07-26T21:50:41 EDT" duration-ms="301" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Check if user able to retrieve a record By Assignment ID with LMS API"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Positive Scenarios of All modules Get requests"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:testrunner.testRunner$TestRunner@6e171cd7]" started-at="2023-07-26T21:50:41 EDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-07-26T21:50:42 EDT" duration-ms="273" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Check if user able to retrieve a record  By BatchID with LMS API"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Positive Scenarios of All modules Get requests"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:testrunner.testRunner$TestRunner@6e171cd7]" started-at="2023-07-26T21:50:42 EDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-07-26T21:50:42 EDT" duration-ms="429" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Check if user able to retrieve all submissions with LMS API"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Positive Scenarios of All modules Get requests"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:testrunner.testRunner$TestRunner@6e171cd7]" started-at="2023-07-26T21:50:42 EDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-07-26T21:50:42 EDT" duration-ms="322" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Check if user able to retrieve submissions by AssignmentID with LMS API"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Positive Scenarios of All modules Get requests"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:testrunner.testRunner$TestRunner@6e171cd7]" started-at="2023-07-26T21:50:42 EDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-07-26T21:50:43 EDT" duration-ms="260" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Check if user able to retrieve grades by studentID with LMS API"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Positive Scenarios of All modules Get requests"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:testrunner.testRunner$TestRunner@6e171cd7]" started-at="2023-07-26T21:50:43 EDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-07-26T21:50:43 EDT" duration-ms="242" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Check if user able to retrieve grades by batchID with LMS API"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Positive Scenarios of All modules Get requests"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:testrunner.testRunner$TestRunner@6e171cd7]" started-at="2023-07-26T21:50:43 EDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-07-26T21:50:43 EDT" duration-ms="246" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Check if user able to retrieve submissions by userID with LMS API"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Positive Scenarios of All modules Get requests"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:testrunner.testRunner$TestRunner@6e171cd7]" started-at="2023-07-26T21:50:43 EDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-07-26T21:50:43 EDT" duration-ms="278" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Check if user able to retrieve submissions by userID with LMS API"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Positive Scenarios of All modules Get requests"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:testrunner.testRunner$TestRunner@6e171cd7]" started-at="2023-07-26T21:50:43 EDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-07-26T21:50:44 EDT" duration-ms="313" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA["Check if user able to update a record with valid submission Id and request body"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["update request on All Modules positive scenarios"]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[1 expectation failed.
Expected status code <200> but was <400>.
]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 1 expectation failed.
Expected status code <200> but was <400>.

at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:67)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:484)
at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:73)
at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrapNoCoerce.callConstructor(ConstructorSite.java:108)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:277)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:512)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:696)
at io.restassured.internal.ResponseSpecificationImpl.this$2$validateResponseIfRequired(ResponseSpecificationImpl.groovy)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at org.codehaus.groovy.runtime.callsite.PlainObjectMetaMethodSite.doInvoke(PlainObjectMetaMethodSite.java:43)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:198)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:62)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:185)
at io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:135)
at io.restassured.specification.ResponseSpecification$statusCode$0.callCurrent(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:143)
at io.restassured.internal.ValidatableResponseOptionsImpl.statusCode(ValidatableResponseOptionsImpl.java:89)
at stepdefinition.PutRequest.request_should_be_successful_with_status_code200(PutRequest.java:132)
at ✽.Request should be successful with status code200(file:///Users/srihari/GitHub/Team11_RestAPI/src/test/java/features/04PutRequest_positive.feature:11)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:testrunner.testRunner$TestRunner@6e171cd7]" started-at="2023-07-26T21:50:44 EDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-07-26T21:50:44 EDT" duration-ms="255" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Check if user able to update a grade assignment with valid submission Id and request body"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["update request on All Modules positive scenarios"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:testrunner.testRunner$TestRunner@6e171cd7]" started-at="2023-07-26T21:50:44 EDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-07-26T21:50:44 EDT" duration-ms="255" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Check if user able to update a records with valid Assignment Id and request body"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["update request on All Modules positive scenarios"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:testrunner.testRunner$TestRunner@6e171cd7]" started-at="2023-07-26T21:50:44 EDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-07-26T21:50:45 EDT" duration-ms="244" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Check if user able to update a user with valid User Id and request body"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["update request on All Modules positive scenarios"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:testrunner.testRunner$TestRunner@6e171cd7]" started-at="2023-07-26T21:50:45 EDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-07-26T21:50:45 EDT" duration-ms="270" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Check if user able to update a batch with valid batch Id and request body"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["update request on All Modules positive scenarios"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:testrunner.testRunner$TestRunner@6e171cd7]" started-at="2023-07-26T21:50:45 EDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-07-26T21:50:45 EDT" duration-ms="247" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Check if user able to update a program with valid program name and request body"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["update request on All Modules positive scenarios"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:testrunner.testRunner$TestRunner@6e171cd7]" started-at="2023-07-26T21:50:45 EDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-07-26T21:50:45 EDT" duration-ms="249" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Check if user able to update a program with valid program Id and request body"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["update request on All Modules positive scenarios"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:testrunner.testRunner$TestRunner@6e171cd7]" started-at="2023-07-26T21:50:45 EDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-07-26T21:50:46 EDT" duration-ms="252" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA["Check if user able to update a userroleprogram batch with valid User Id and request body"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["update request on All Modules positive scenarios"]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[1 expectation failed.
Expected status code <200> but was <400>.
]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 1 expectation failed.
Expected status code <200> but was <400>.

at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:67)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:484)
at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:73)
at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrapNoCoerce.callConstructor(ConstructorSite.java:108)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:277)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:512)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:696)
at io.restassured.internal.ResponseSpecificationImpl.this$2$validateResponseIfRequired(ResponseSpecificationImpl.groovy)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at org.codehaus.groovy.runtime.callsite.PlainObjectMetaMethodSite.doInvoke(PlainObjectMetaMethodSite.java:43)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:198)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:62)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:185)
at io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:135)
at io.restassured.specification.ResponseSpecification$statusCode$0.callCurrent(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:143)
at io.restassured.internal.ValidatableResponseOptionsImpl.statusCode(ValidatableResponseOptionsImpl.java:89)
at stepdefinition.PutRequest.request_should_be_successful_with_status_code200(PutRequest.java:132)
at ✽.Request should be successful with status code200(file:///Users/srihari/GitHub/Team11_RestAPI/src/test/java/features/04PutRequest_positive.feature:85)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:testrunner.testRunner$TestRunner@6e171cd7]" started-at="2023-07-26T21:50:46 EDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-07-26T21:50:47 EDT" duration-ms="1610" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["check if user able to create a new user with valid endpoint and request body"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["update request on All Modules positive scenarios"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:testrunner.testRunner$TestRunner@6e171cd7]" started-at="2023-07-26T21:50:47 EDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-07-26T21:50:48 EDT" duration-ms="469" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Check if user able to update a user rolestatus with valid User Id and request body"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["update request on All Modules positive scenarios"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:testrunner.testRunner$TestRunner@6e171cd7]" started-at="2023-07-26T21:50:48 EDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-07-26T21:50:48 EDT" duration-ms="253" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["check if user able to update a program with missing field"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["update all data with missing fields and valid ids-  Negative Scenarios"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:testrunner.testRunner$TestRunner@6e171cd7]" started-at="2023-07-26T21:50:48 EDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-07-26T21:50:48 EDT" duration-ms="214" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["check if user able to update a program with missing field and valid program name"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["update all data with missing fields and valid ids-  Negative Scenarios"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:testrunner.testRunner$TestRunner@6e171cd7]" started-at="2023-07-26T21:50:48 EDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-07-26T21:50:48 EDT" duration-ms="236" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["check if user able to update a batch with missing field"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["update all data with missing fields and valid ids-  Negative Scenarios"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:testrunner.testRunner$TestRunner@6e171cd7]" started-at="2023-07-26T21:50:48 EDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-07-26T21:50:49 EDT" duration-ms="394" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Check if user able to update a user with missing fields"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["update all data with missing fields and valid ids-  Negative Scenarios"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:testrunner.testRunner$TestRunner@6e171cd7]" started-at="2023-07-26T21:50:49 EDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-07-26T21:50:49 EDT" duration-ms="227" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Check if user able to update a user role status with missing data"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["update all data with missing fields and valid ids-  Negative Scenarios"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:testrunner.testRunner$TestRunner@6e171cd7]" started-at="2023-07-26T21:50:49 EDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-07-26T21:50:49 EDT" duration-ms="237" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Check if user able to assign user to program batch with missing data"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["update all data with missing fields and valid ids-  Negative Scenarios"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:testrunner.testRunner$TestRunner@6e171cd7]" started-at="2023-07-26T21:50:49 EDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-07-26T21:50:49 EDT" duration-ms="218" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Check if user able to assign user to program batch with invalid ID"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["update all data with missing fields and valid ids-  Negative Scenarios"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:testrunner.testRunner$TestRunner@6e171cd7]" started-at="2023-07-26T21:50:49 EDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-07-26T21:50:50 EDT" duration-ms="237" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Check if user able to update a Assignment with missing fields"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["update all data with missing fields and valid ids-  Negative Scenarios"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:testrunner.testRunner$TestRunner@6e171cd7]" started-at="2023-07-26T21:50:50 EDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-07-26T21:50:50 EDT" duration-ms="248" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Check if user able to resubmit with missing fields and request body"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["update all data with missing fields and valid ids-  Negative Scenarios"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:testrunner.testRunner$TestRunner@6e171cd7]" started-at="2023-07-26T21:50:50 EDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-07-26T21:50:50 EDT" duration-ms="260" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Check if user able to update a grades with missing fields"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["update all data with missing fields and valid ids-  Negative Scenarios"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:testrunner.testRunner$TestRunner@6e171cd7]" started-at="2023-07-26T21:50:50 EDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-07-26T21:50:50 EDT" duration-ms="255" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Check if user able to delete a submission with valid ID"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Delete request on All Modules positive scenarios"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:testrunner.testRunner$TestRunner@6e171cd7]" started-at="2023-07-26T21:50:50 EDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-07-26T21:50:51 EDT" duration-ms="239" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Check if user able to delete a Assignment with valid assignment ID"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Delete request on All Modules positive scenarios"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:testrunner.testRunner$TestRunner@6e171cd7]" started-at="2023-07-26T21:50:51 EDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-07-26T21:50:51 EDT" duration-ms="232" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Check if user able to delete a user with valid user ID"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Delete request on All Modules positive scenarios"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:testrunner.testRunner$TestRunner@6e171cd7]" started-at="2023-07-26T21:50:51 EDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-07-26T21:50:51 EDT" duration-ms="223" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Check if user able to delete a batch with valid batch ID"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Delete request on All Modules positive scenarios"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:testrunner.testRunner$TestRunner@6e171cd7]" started-at="2023-07-26T21:50:51 EDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-07-26T21:50:52 EDT" duration-ms="373" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Check if user able to delete a program with valid program ID"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Delete request on All Modules positive scenarios"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:testrunner.testRunner$TestRunner@6e171cd7]" started-at="2023-07-26T21:50:52 EDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-07-26T21:50:52 EDT" duration-ms="986" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["check if user able to create a program with valid endpoint and request body"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Delete request on All Modules positive scenarios"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:testrunner.testRunner$TestRunner@6e171cd7]" started-at="2023-07-26T21:50:52 EDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-07-26T21:50:53 EDT" duration-ms="457" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Check if user able to delete a program with valid program name"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Delete request on All Modules positive scenarios"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:testrunner.testRunner$TestRunner@6e171cd7]" started-at="2023-07-26T21:50:53 EDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-07-26T21:50:53 EDT" duration-ms="470" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Check if user able to retrieve a program by InvalidID"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Positive Scenarios of All modules Get requests"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:testrunner.testRunner$TestRunner@6e171cd7]" started-at="2023-07-26T21:50:53 EDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-07-26T21:50:54 EDT" duration-ms="382" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Check if user able to retrieve a batch by Invalid ID"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Positive Scenarios of All modules Get requests"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:testrunner.testRunner$TestRunner@6e171cd7]" started-at="2023-07-26T21:50:54 EDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-07-26T21:50:54 EDT" duration-ms="426" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Check if user able to retrieve a batch by invalid name"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Positive Scenarios of All modules Get requests"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:testrunner.testRunner$TestRunner@6e171cd7]" started-at="2023-07-26T21:50:54 EDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-07-26T21:50:55 EDT" duration-ms="293" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Check if user able to retrieve a batch by invalid program ID"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Positive Scenarios of All modules Get requests"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:testrunner.testRunner$TestRunner@6e171cd7]" started-at="2023-07-26T21:50:55 EDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-07-26T21:50:55 EDT" duration-ms="392" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Check if user able to retrieve a user with Invalid User ID"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Positive Scenarios of All modules Get requests"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:testrunner.testRunner$TestRunner@6e171cd7]" started-at="2023-07-26T21:50:55 EDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-07-26T21:50:55 EDT" duration-ms="261" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Check if user able to retrieve a record By invalid Assignment ID with LMS API"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Positive Scenarios of All modules Get requests"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:testrunner.testRunner$TestRunner@6e171cd7]" started-at="2023-07-26T21:50:55 EDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-07-26T21:50:55 EDT" duration-ms="294" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Check if user able to retrieve a record  By invalid BatchID with LMS API"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Positive Scenarios of All modules Get requests"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:testrunner.testRunner$TestRunner@6e171cd7]" started-at="2023-07-26T21:50:55 EDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-07-26T21:50:56 EDT" duration-ms="288" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Check if user able to retrieve submissions by invalid AssignmentID with LMS API"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Positive Scenarios of All modules Get requests"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:testrunner.testRunner$TestRunner@6e171cd7]" started-at="2023-07-26T21:50:56 EDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-07-26T21:50:56 EDT" duration-ms="251" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Check if user able to retrieve grades by invalid studentID with LMS API"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Positive Scenarios of All modules Get requests"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:testrunner.testRunner$TestRunner@6e171cd7]" started-at="2023-07-26T21:50:56 EDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-07-26T21:50:56 EDT" duration-ms="214" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Check if user able to retrieve grades by invalid batchID with LMS API"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Positive Scenarios of All modules Get requests"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:testrunner.testRunner$TestRunner@6e171cd7]" started-at="2023-07-26T21:50:56 EDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-07-26T21:50:57 EDT" duration-ms="330" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Check if user able to retrieve submissions by invalid userID with LMS API"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Positive Scenarios of All modules Get requests"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:testrunner.testRunner$TestRunner@6e171cd7]" started-at="2023-07-26T21:50:57 EDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-07-26T21:50:57 EDT" duration-ms="267" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA["Check if user able to retrieve submissions by invalid batchID with LMS API"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Positive Scenarios of All modules Get requests"]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[1 expectation failed.
Expected status code <404> but was <200>.
]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 1 expectation failed.
Expected status code <404> but was <200>.

at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:67)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:484)
at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:73)
at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrapNoCoerce.callConstructor(ConstructorSite.java:108)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:277)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:512)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:696)
at io.restassured.internal.ResponseSpecificationImpl.this$2$validateResponseIfRequired(ResponseSpecificationImpl.groovy)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at org.codehaus.groovy.runtime.callsite.PlainObjectMetaMethodSite.doInvoke(PlainObjectMetaMethodSite.java:43)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:198)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:62)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:185)
at io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:135)
at io.restassured.specification.ResponseSpecification$statusCode$0.callCurrent(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:143)
at io.restassured.internal.ValidatableResponseOptionsImpl.statusCode(ValidatableResponseOptionsImpl.java:89)
at stepdefinition.AllGet_NegativeSteps.user_receives_not_found404_message(AllGet_NegativeSteps.java:68)
at ✽.User receives NotFound404 message(file:///Users/srihari/GitHub/Team11_RestAPI/src/test/java/features/07AllGet_NegativeScenarios.feature:80)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:testrunner.testRunner$TestRunner@6e171cd7]" started-at="2023-07-26T21:50:57 EDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-07-26T21:50:57 EDT" duration-ms="578" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Check if user able to delete a batch with valid batch ID"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Delete Request for all modules with Invalid Data"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:testrunner.testRunner$TestRunner@6e171cd7]" started-at="2023-07-26T21:50:57 EDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-07-26T21:50:58 EDT" duration-ms="356" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Check if user able to delete a batch with Invalid assignment ID"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Delete Request for all modules with Invalid Data"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:testrunner.testRunner$TestRunner@6e171cd7]" started-at="2023-07-26T21:50:58 EDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-07-26T21:50:58 EDT" duration-ms="222" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Check if user able to delete a batch with Invalid user ID"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Delete Request for all modules with Invalid Data"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:testrunner.testRunner$TestRunner@6e171cd7]" started-at="2023-07-26T21:50:58 EDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-07-26T21:50:58 EDT" duration-ms="214" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Check if user able to delete a batch with Invalid batch ID"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Delete Request for all modules with Invalid Data"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:testrunner.testRunner$TestRunner@6e171cd7]" started-at="2023-07-26T21:50:58 EDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-07-26T21:50:58 EDT" duration-ms="233" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Check if user able to delete a program with invalid program name"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Delete Request for all modules with Invalid Data"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:testrunner.testRunner$TestRunner@6e171cd7]" started-at="2023-07-26T21:50:58 EDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-07-26T21:50:59 EDT" duration-ms="233" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Check if user able to delete a program with invalid program ID"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Delete Request for all modules with Invalid Data"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:testrunner.testRunner$TestRunner@6e171cd7]" started-at="2023-07-26T21:50:59 EDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-07-26T21:50:59 EDT" duration-ms="217" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["check if user able to update a program with invalid ID"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Put  Negative Scenarios"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:testrunner.testRunner$TestRunner@6e171cd7]" started-at="2023-07-26T21:50:59 EDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-07-26T21:50:59 EDT" duration-ms="215" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["check if user able to update a program with invalid program name"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Put  Negative Scenarios"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:testrunner.testRunner$TestRunner@6e171cd7]" started-at="2023-07-26T21:50:59 EDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-07-26T21:50:59 EDT" duration-ms="243" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["check if user able to update a batch with invalid ID"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Put  Negative Scenarios"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:testrunner.testRunner$TestRunner@6e171cd7]" started-at="2023-07-26T21:50:59 EDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-07-26T21:51:00 EDT" duration-ms="307" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Check if user able to update a user with INvalid User Id and request body"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Put  Negative Scenarios"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:testrunner.testRunner$TestRunner@6e171cd7]" started-at="2023-07-26T21:51:00 EDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-07-26T21:51:00 EDT" duration-ms="275" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Check if user able to update a user role status with Invalid User Id"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Put  Negative Scenarios"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:testrunner.testRunner$TestRunner@6e171cd7]" started-at="2023-07-26T21:51:00 EDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-07-26T21:51:00 EDT" duration-ms="228" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Check if user able to update a Assignment with invalid AssignmentId and request body"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Put  Negative Scenarios"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:testrunner.testRunner$TestRunner@6e171cd7]" started-at="2023-07-26T21:51:00 EDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-07-26T21:51:00 EDT" duration-ms="256" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Check if user able to update a submission with invalid submission Id and request body"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Put  Negative Scenarios"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:testrunner.testRunner$TestRunner@6e171cd7]" started-at="2023-07-26T21:51:00 EDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-07-26T21:51:01 EDT" duration-ms="277" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Check if user able to update a grades with invalid submission Id and request body"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Put  Negative Scenarios"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method is-config="true" signature="tearDownClass()[pri:0, instance:testrunner.testRunner$TestRunner@6e171cd7]" started-at="2023-07-26T21:51:01 EDT" name="tearDownClass" finished-at="2023-07-26T21:51:13 EDT" duration-ms="12617" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownClass -->
      </class> <!-- testrunner.testRunner$TestRunner -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
